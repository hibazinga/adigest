from flask import Flask, g, request, render_template, url_for, redirect
import oauth123
import sqlite3
import sys
import db
import settings
from lib.body_handler import *

app = Flask(__name__)

def connect_db():
    return sqlite3.connect(settings._DB)

def manage_db(con, cur, fn, *args):
    code = fn(cur, args)
    if code == settings._SUCCESS:
        con.commit()
    return code


@app.before_request
def before_request():
    g.db = connect_db()
    g.cur = g.db.cursor()

@app.teardown_request
def teardown_request(exception):
    if hasattr(g, 'cur'):
        g.cur.close()
    if hasattr(g, 'db'):
        g.db.close()

@app.route('/')
def redirect_index():
    return redirect(url_for('index'))

@app.route('/index')
def index():
    #db.insert_user(g.cur, '123','123@gmail.com', 'Jie', 'Yu', '123456', 2)
    #g.db.commit()
    return render_template('index.html')

@app.route('/login')
def login():
    url = oauth123.re1()
    return redirect(url)


@app.route('/oauth_success')
def oauth_success():
    token = request.args.get('contextio_token')
    uid, email, first_name, last_name, token, preference, timestamp = oauth123.get_userinfo_from_token(token)
    """
    args = oauth123.get_userinfo_from_token(token)
    return manage_db(g.db, g.cur, db.insert_user, args)
    """
    code = db.insert_user(g.cur, uid, email, first_name, last_name, token, preference, timestamp)
    if code == settings._SUCCESS:
        return "success"
    else:
        return "failure"
    
    #store this data here
    #return str(uid)+"\n"+ str(email)+"\n"+str(first_name)+"\n"+str(last_name) +"\n"+str(token)+ "\n"+str(preference) + "\n" + str(timestamp)

@app.route('/oauth')
def oauth():
    url = oauth123.get_browser_redirect_url()
    return redirect(url)

@app.route('/preference', methods = ['GET'])
def get_preference():
    return render_template('preference.html')

@app.route('/webhook', methods = ['POST'])
def webhook_callback():
    f = open('/tmp/log123.txt','a')
    f.write("------\n")
    import json
    data = json.loads(request.data)
    uid = data['account_id']
    mid = data['message_data']['message_id']
    
#TODO: fetch parsing result
#parse_res = {'is_promotion':Bool, 'unsubscribe_url':string, 'img_url_list':list}
    email_addr, sender_email, sender_name, email_id, gmail_message_id, timestamp, subject, content = oauth123.get_message(uid, mid)
    parse_res = detect_promotion(content)
    f.write(uid)
    f.write('\n')
    f.write(mid)
    f.write('\n')
    f.write(str(parse_res))
    f.write('\n')
    f.write("------")
    f.close()
    return "123"

#m = oauth123.get_message(uid)

if __name__ == '__main__':
    app.run(debug=True)
